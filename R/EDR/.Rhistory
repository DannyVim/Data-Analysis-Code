load("D:/CPED_V1.0/CPED.RData")
library("eeptools", lib.loc="~/R/win-library/3.5")
library("dplyr", lib.loc="~/R/win-library/3.5")
mayor_promo %>% glm(formula=UP~age+educ6+gender+nationality2+months_of_pos+offsite,family = binomial,contrasts = list(educ6='contr.treatment')) %>% summary()
mayor_promo %>% glm(formula=UP~age+educ6+gender+nationality2+months_of_pos,family = binomial,contrasts = list(educ6='contr.treatment')) %>% summary()
Sys.setlocale(category = "LC_CTYPE", locale = "Chinese")
mayor_promo %>% glm(formula=UP~age+educ6+gender+nationality2+months_of_pos,family = binomial,contrasts = list(educ6='contr.treatment')) %>% summary()
test$age2 <- test$age^2
summary(test$age2)
mayor_promo$age2 <- mayor_promo$age^2
mayor_promo$offsite <- case_when(mayor_promo$locate2==mayor_promo$city&mayor_promo$locate1 == mayor_promo$province ~ TRUE,
mayor_promo$locate1 == mayor_promo$province&is.na(mayor_promo$locate2==mayor_promo$city) ~ TRUE,
mayor_promo$locate2!=mayor_promo$city|mayor_promo$locate1 != mayor_promo$province ~ FALSE)
mayor_promo %>% glm(formula=UP~age+age2+educ6+gender+nationality2+months_of_pos+offsite,family = binomial,contrasts = list(educ6='contr.treatment')) %>% summary()
mayor_promo %>% glm(formula=UP~age+educ6+gender+nationality2+months_of_pos+offsite,family = binomial,contrasts = list(educ6='contr.treatment')) %>% summary()
mayor_promo %>% glm(formula=UP~age,family = binomial) %>% summary()
mayor_promo %>% glm(formula=UP~age+age2,family = binomial) %>% summary()
mayor_promo %>% glm(formula=UP~age+age2+educ6+gender+nationality2+months_of_pos,family = binomial,contrasts = list(educ6='contr.treatment')) %>% summary()
View(mayor_promo)
names(test$age2) <- age^2
names(test$age2)
names(test)[names(test)=="age2"]="age^2"
names(test)
names(mayor_promo)[names(mayor_promo)=="age2"]="age^2"
mayor_promo$age^2 <- mayor_promo$age^2/100
mayor_promo$age_sq <- mayor_promo$age^2/100
select(mayor_promo,-age2)
select(mayor_promo,select=-age2)
names(mayor_promo)
select(mayor_promo,-age^2)
select(mayor_promo,-'age^2')
mayor_promo <- select(mayor_promo,-'age^2')
mayor_promo %>% glm(formula=UP~age+age_sq+educ6+gender+nationality2+months_of_pos,family = binomial,contrasts = list(educ6='contr.treatment')) %>% summary()
mayor_promo$age_sq <- mayor_promo$age^2/10
mayor_promo %>% glm(formula=UP~age+age_sq+educ6+gender+nationality2+months_of_pos,family = binomial,contrasts = list(educ6='contr.treatment')) %>% summary()
mayor_promo %>% glm(formula=UP~age+age_sq+educ6+gender+nationality2+months_of_pos,family = binomial) %>% summary()
mayor_promo$age_sq <- mayor_promo$age^2/100
mayor_promo %>% glm(formula=UP~age+age_sq+educ6+gender+nationality2+months_of_pos,family = binomial) %>% summary()
mayor_promo %>% glm(formula=UP~age+educ6+gender+nationality2+months_of_pos,family = binomial) %>% summary()
save.image("D:/CPED_V1.0/CPED.RData")
setwd("C:/Users/I501406/OneDrive - mail.ecust.edu.cn/Work Sync Folder/Civil_Affair_Project")
library(haven)
origin_data <- read_sav("origin_data.sav")
library(dplyr)
setwd("C:/Users/I501406/OneDrive - mail.ecust.edu.cn/Work Sync Folder/EDR")
chicago <- readRDS('chicago.rds')
dim(chicago)
str(chicago)
names(chicago)[1:3]
subset<-select(chicago,city:dptp)
head(subset)
subset<-select(chicago,ends_with('2'))
head(subset)
subset<-select(chicago,starts_with('d'))
str(subset)
chic.f <- filter(chicago,pm25tmean2>30)
str(chic.f)
summary(chic.f$pm25tmean2)
chic.f <- filter(chicago,pm25tmean2>30&tmpd>80)
select(chic.f,date,tmpd,pm25tmean2)
chicago<-arrange(chicago,date)
head(select(chicago,date,pm25tmean2),3)
tail(select(chicago,date,pm25tmean2),3)
chicago<-arrange(chicago,desc(date))
head(select(chicago,date,pm25tmean2),3)
tail(select(chicago,date,pm25tmean2),3)
head(chicago[, 1:5], 3)
head(chicago[1:5], 3)
head(chicago[,1:5], 3)
chicago <- rename(chicago, dewpoint = dptp, pm25 = pm25tmean2)
chicago<- mutate(chicago,pm25detrend=pm25-mean(pm25,na.rm = TRUE))
head(chicago)
heand(transmute(
chicago,
pm10detrend = pm10tmean2 - mean(pm10tmean2, na.rm = TRUE),
o3detrend = o3tmean2 - mean(o3tmean2, na.rm = TRUE)
))
head(transmute(
chicago,
pm10detrend = pm10tmean2 - mean(pm10tmean2, na.rm = TRUE),
o3detrend = o3tmean2 - mean(o3tmean2, na.rm = TRUE)
))
View(chicago)
head(transmute(chicago,year=as.POSIXct(date)$year+1900))
chicago<-mutate(chicago,year=as.POSIXct(date)$year+1900)
View(chicago)
chicago[1,4]
as.POSIXct(chicago[1,4])
as.POSIXct(chicago[1,4])$year
as.POSIXct(chicago[1,4])$year+1900
?DateTimeClasses
year(as.POSIXct(chicago[1,4]))
as.POSIXct(chicago[1,4])
as.POSIXct(chicago[1,4])[1]
as.POSIXct(chicago[1,4])[1,1]
t<-as.POSIXct(chicago[1,4])[1,1]
t<-as.POSIXct(chicago[1,4])
t$year+1900
chicago<-mutate(chicago,year=as.POSIXct(as.Date(date))$year+1900)
typeof(chicago)
typeof(chicago$date)
str(chicago$date)
str(chicago)
chicago<-mutate(chicago,year=as.POSIXct(date)$year+1900)
library(lubridate)
chicago<-mutate(chicago,year=year(date))
years<-group_by(chicago,year)
summarise(years,pm25=mean(pm25,na.rm = TRUE),
o3=max(o3tmean2,na.rm = TRUE),
no2=median(no2tmean2,na.rm = TRUE))
rm(t)
qq <- quantile(chicago$pm25,seq(0,1,0.2),na.rm = TRUE)
qq
qq <- quantile(chicago$pm25,seq(0,1,0.25),na.rm = TRUE)
qq
qq <- quantile(chicago$pm25,seq(0,1,0.2),na.rm = TRUE)
chicago<-mutate(chicago,pm25.quint=cut(pm25,qq))
quint <- group_by(chicago,pm25.quint)
View(quint)
summarise(quint,o3=mean(o3tmean2,na.rm = TRUE),
no2=mean(no2tmean2,na.rm = TRUE))
mutate(chicago,month=month(date))%>%
group_by(month)%>%
summarise(pm25=mean(pm25,na.rm = TRUE),
o3=mean(o3tmean2,na.rm = TRUE),
no2=median(no2tmean2,na.rm = TRUE))
ozone <-  read_csv("hourly_44201_2014.csv", coltype = 'ccccinnccccccncnncccccc')
library(readr)
ozone <-  read_csv("hourly_44201_2014.csv", coltype = 'ccccinnccccccncnncccccc')
ozone <-  read_csv("hourly_44201_2014.csv", col_type = 'ccccinnccccccncnncccccc')
View(ozone)
View(ozone)
rm(ozone)
library(readr)
ozone <- read_csv("hourly_44201_2014.csv",
col_types = cols(`Date GMT` = col_character(),
`Date Local` = col_character(), `Date of Last Change` = col_character(),
Latitude = col_number(), Longitude = col_number(),
MDL = col_number(), `Parameter Code` = col_character(),
`Sample Measurement` = col_number(),
`Time GMT` = col_character(), `Time Local` = col_character(),
Uncertainty = col_number()))
View(ozone)
nrow(ozone)
ncol(ozone)
str(ozone)
head(ozone[,c(6:7,10)])
tail(ozone[,c(6:7,10)])
dim(ozone)
library(dplyr)
table(ozone$`Time Local`)
names(ozone)
names(ozone)<-make.names(names(ozone))
names(ozone)
table(ozone$Time.Local)
filter(ozone,State.Code=='36'&County.Code=='033'
$Date.Local=='2014-09-30')%>%
select(Date.Local,Time.Local,Sample.Measurement)%>%
as.data.frame()
filter(ozone,State.Code=='36'&County.Code=='033'&Date.Local=='2014-09-30')%>%
select(Date.Local,Time.Local,Sample.Measurement)%>%
as.data.frame()
select(ozone,State.Name)%>%unique%>%nrow
select(ozone,State.Name)%>%unique%>%dim
select(ozone,State.Name)%>%unique%>%nrow()
summary(ozone$Sample.Measurement)
quantile(ozone$Sample.Measurement,seq(0,1,0.1))
ranking <- group_by(ozone,State.Name,County.Name)%>%
summarise(ozone=mean(Sample.Measurement))%>%
as.data.frame%>%
arrange(desc(ozone))
head(ranking,10)
tail(ranking,10)
filter(ozone,State.Name=='California'&County.Name=='Mariposa')%>% nrow
12130/24
ozone <- mutate(ozone,Date.Local = as.Date(Date.Local))
filter(ozone,State.Name=='California' & County.Name=='Mariposa')%>%
mutate(month=factor(months(Date.Local),levels = month.name))%>%
group_by(month)%>%
summarise(ozone=mean(Sample.Measurement))
filter(ozone,State.Name=='Oklahoma' & County.Name=='Caddo')%>%nrow
filter(ozone,State.Name=='Oklahoma' & County.Name=='Caddo')%>%
mutate(month=factor(months(Date.Local),levels = month.name))%>%
group_by(month)%>%
summarise(ozone=mean(Sample.Measurement))
? sample
set.seed(10234)
N <- nrow(ozone)
idx <- sample(N,N,replace = TRUE)
ozone2<-ozone[idx,]
ranking2 <- group_by(ozone2,State.Name,County.Name)%>%
summarise(ozone=mean(Sample.Measurement))%>%
as.data.frame%>%
arrange(desc(ozone))
cbind(head(ranking,10),head(ranking2,10))
cbind(head(ranking,10),head(ranking2,10))
cbind(tail(ranking,10),tail(ranking2,10))
library(readr)
pollution <- read_csv("avgpm25.csv")
class <- c('numeric','character','factor','numeric','numeric')
pollution <- read_csv('avgpm25.csv',colClasses=class)
pollution <- read_csv('avgpm25.csv',col_types = class)
pollution <- read_csv('avgpm25.csv',col_types = 'ncfnn')
rm(class)
library(readr)
pollution <- read_csv("avgpm25.csv", col_types = cols(latitude = col_number(),
longitude = col_number(), pm25 = col_number(),
region = col_factor(levels = c("east",
"west"))))
str(pollution)
fivenum(pollution$pm25)
summary(pollution$pm25)
boxplot(pollution$pm25,col = 'blue')
library(dplyr)
install.packages("maps")
library(maps)
with(filter(pollution,pm25>15),points(longitude,latitude))
map('county','california')
with(filter(pollution,pm25>15),points(longitude,latitude))
hist(pollution$pm25,col = 'green')
rug(pollution$pm25)
hist(pollution$pm25,col = 'green',breaks = 100)
rug(pollution$pm25)
boxplot(pollution$pm25,col = 'green')
abline(h=12)
boxplot(pollution$pm25,col = 'blue')
abline(h=12)
boxplot(pollution$pm25,col = 'blue')
abline(v=12,lwd=2)
abline(v=median(pollution$pm25),col='magenta',lwd=4)
abline(v=12,lwd=2)
hist(pollution$pm25,col = 'green')
abline(v=12,lwd=2)
abline(v=median(pollution$pm25),col='magenta',lwd=4)
table(pollution$region) %>% barplot(col='wheat')
boxplot(pm25~region,data = pollution,col='red')
par(mfrow=c(2,1),mar=c(4,4,2,1))
hist(subset(pollution,region=='east')$pm25,col='green')
hist(subset(pollution,region=='west')$pm25,col='green')
? par
with(pollution,plot(latitude,pm25))
abline(h=12,lwd=2,lty=2)
with(pollution,plot(latitude,pm25,col=region))
abline(h=12,lwd=2,lty=2)
with(pollution,plot(latitude,pm25,col=region))
abline(h=12,lwd=2,lty=2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
with(subset(pollution, region == "west"), plot(latitude, pm25, main = "West"))
with(subset(pollution, region == "east"), plot(latitude, pm25, main = "East"))
library(lattice)
xyplot(pm~latitude|region,data=pollution)
xyplot(pm25~latitude|region,data=pollution)
library(ggplot2)
qplot(latitude,pm25,data=pollution,facets=.~region)
data("airquality")
data(airquality)
data("airquality")
data(airquality)
with(airquality,{
plot(Temp,Ozone)
line(loess.smooth(Temp,Ozone))
})
with(airquality,{
plot(Temp,Ozone)
line(loess.smooth(Temp,Ozone))
})
line(loess.smooth(Temp,Ozone))
with(airquality,{
plot(Temp,Ozone),
line(loess.smooth(Temp,Ozone))
})
with(airquality,{
plot(Temp,Ozone)
line(loess.smooth(Temp,Ozone))
})
line(loess.smooth(airquality$Temp,airquality$Ozone))
loess.smooth(airquality$Temp,airquality$Ozone)
with(airquality,{
plot(Temp,Ozone)
lines(loess.smooth(Temp,Ozone))
})
data(cars)
with(cars,plot(speed,dist))
title('Speed vs. Stopping distance')
state<-data.frame(state.x77,region=state.region)
xyplot(Life.Exp~Income|region,data=state,layout=c(4,1))
data(mpg)
qplot(displ,hwy,data=mpg)
?Devices
library(datasets)
airquality <- transform(airquality,Month=factor(Month))
boxplot(Ozone~Month,airquality,xlab='Month',ylab='Ozone(ppb)')
with(airquality,plot(Wind,Ozone))
par('lty')
with(cars,plot(speed,dist,main = Speed vs. Stopping distance))
with(cars,plot(speed,dist,main = 'Speed vs. Stopping distance'))
with(subset(airquality,Month==5),points(Wind,Ozone,col='blue'))
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City"))
with(subset(airquality,Month==5),points(Wind,Ozone,col='blue'))
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City"))
with(subset(airquality,Month==5),points(Wind,Ozone,col='blue'))
with(subset(airquality,Month==5),points(Wind,Ozone,col='red'))
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City",type = 'n'))
with(subset(airquality,Month==5),points(Wind,Ozone,col='red'))
with(subset(airquality,Month!=5),points(Wind,Ozone,col='blue'))
legend('topright',pch = 1,col = c('red','blue'),legend = c('May','Other Months'))
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City"))
with(subset(airquality,Month==5),points(Wind,Ozone,col='red'))
with(subset(airquality,Month!=5),points(Wind,Ozone,col='blue'))
legend('topright',pch = 1,col = c('red','blue'),legend = c('May','Other Months'))
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City",pch=20))
model<-lm(Ozone~Wind,airquality)
abline(model,lwd=2)
with(airquality,{
plot(Wind,Ozone,main = 'Ozone and Wind')
plot(Solar.R,Ozone,main = 'Ozone and Solar Radiation')
})
par(mfrow=c(1,2))
with(airquality,{
plot(Wind,Ozone,main = 'Ozone and Wind')
plot(Solar.R,Ozone,main = 'Ozone and Solar Radiation')
})
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
with(airquality,{
plot(Wind,Ozone,main = 'Ozone and Wind')
plot(Solar.R,Ozone,main = 'Ozone and Solar Radiation')
plot(Temp,Ozone,main = 'Ozone and Temperature')
mtext('Ozone and Weather in New Your City',outer = TRUE)
})
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
with(airquality,{
plot(Wind,Ozone,main = 'Ozone and Wind')
plot(Solar.R,Ozone,main = 'Ozone and Solar Radiation')
plot(Temp,Ozone,main = 'Ozone and Temperature')
mtext('Ozone and Weather in New Your City')
})
pal <- colorRamp(c('red','blue'))
pal(0)
pal(1)
pal(seq(0,1,10))
pal(seq(0,1,len=10))
pal(2)
pal <- colorRampPalette(c('red','yellow'))
pal(2)
pal(0)
pal(1)
pal(3)
pal(4)
pal(10)
rgb(0,0,234,maxColorValue = 255)
install.packages("RColorBrewer")
library(RColorBrewer)
display.brewer.all()
display.brewer.all()
cols<-brewer.pal(3,'BuGn')
cols
cols<-brewer.pal(3,'BuGn')
image(volcano,col = pal(20))
cols<-brewer.pal(3,'BuGn')
pal<-colorRampPalette(cols)
image(volcano,col = pal(20))
with(airquality,smoothScatter(Wind,Ozone))
par(mfrow=c(1,2))
with(airquality,{
smoothScatter(Wind,Ozone)
plot(Wind,Ozone)
})
View(mpg)
View(airquality)
with(airquality,plot(Wind,Temp,pch=20,col=rgb(0,0,0,0.15)))
set.seed(1234)
x <- rnorm(12, rep(1:3, each = 4), 0.2)
y <- rnorm(12, rep(c(1, 2, 1), each = 4), 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
df <- data.frame(x=x,y=y)
dist(df)
rdistxy<-as.matrix(dist(df))
diag(rdistxy)<-diag(rdistxy)+100000
ind<-which(rdistxy==min(rdistxy),arr.ind = TRUE)
ind
plot(x,y,col='blue',pch=19,cex=2)
text(x+0.05,y+0.05,labels = as.character(1:12))
points(x[ind[1,]],y[ind[1,]],col='orange',pch=19,cex=2)
par(mfrow = c(1, 2))
plot(x, y, col = "blue", pch = 19, cex = 2, main = "Data")
text(x + 0.05, y + 0.05, labels = as.character(1:12))
points(x[ind[1, ]], y[ind[1, ]], col = "orange", pch = 19, cex = 2)
hcluster <- dist(dataFrame) %>% hclust
dendro <- as.dendrogram(hcluster)
cutDendro <- cut(dendro, h = (hcluster$height[1] + 0.00001))
plot(cutDendro$lower[[11]], yaxt = "n", main = "Begin building tree")
library(dplyr)
hcluster <- dist(dataFrame) %>% hclust
hcluster <- dist(df) %>% hclust
dendro <- as.dendrogram(hcluster)
cutDendro <- cut(dendro, h = (hcluster$height[1] + 0.00001))
plot(cutDendro$lower[[11]], yaxt = "n", main = "Begin building tree")
nextmin <- rdistxy[order(rdistxy)][3]
ind <- which(rdistxy == nextmin,arr.ind=TRUE)
hClustering <- data.frame(x=x,y=y) %>% dist %>% hclust
plot(hClustering)
x
?rnorm
View(df)
View(rdistxy)
?diag
diag(rdistxy)
View(rdistxy)
View(rdistxy)+100000
diag(rdistxy)+100000
min(rdistxy)
View(rdistxy)
ind
x[ind[1]]
x[ind[1,]]
df2<-data.frame(x,y)
dm<-as.matrix(df2)[sample(1:12),]
keansObj<-kmeans(dm,centers = 3)
par(mfrow=c(1,2))
image(t(dm)[,nrow(dm):1],yaxt = 'n',main='Original Data')
image(t(dm)[,order(kmeansObj$clustter)],yaxt='n',main='Clustered Data')
image(t(dm)[,order(keansObj$clustter)],yaxt='n',main='Clustered Data')
image(t(dm)[,order(keansObj$cluster)],yaxt='n',main='Clustered Data')
set.seed(12345)
dm1<-matrix(rnorm(400),nrow = 40)
image(1:10,1:40,t(dm1[,nrow(dm1):1]))
image(1:10,1:40,t(dm1)[,nrow(dm1):1])
heatmap(dm1)
library(dplyr)
hh <- dist(dm2) %>% hclust
dmOrdered<-dm2[hh$order,]
par(mfrow=c(1,3))
image(t(dmOrdered)[,nrow(dmOrdered):1])
plot(rowMeans(dmOrdered),40:1,,xlab = 'Row Mean',ylab = 'Row',pch=19)
plot(colMeans(dmOrdered),xlab = 'Column',ylab = 'Column Mean',pch=19)
set.seed(678910)
for (i in 1:40){
coinFlip <- rbinom(1,size = 1,prob = 0.5)
if (coinFlip){
dm2[i,]<-dm2[i,]+rep(c(0,3),each=5)
}
}
heatmap(dm2)
set.seed(678910)
for (i in 1:40){
coinFlip <- rbinom(1,size = 1,prob = 0.5)
if (coinFlip){
dm2[i,]<-dm2[i,]+rep(c(0,3),each=5)
}
}
for (i in 1:40){
coinFlip <- rbinom(1,size = 1,prob = 0.5)
if (coinFlip){
dm[i,]<-dm[i,]+rep(c(0,3),each=5)
}
}
set.seed(678910)
for (i in 1:40){
coinFlip <- rbinom(1,size = 1,prob = 0.5)
if (coinFlip){
dm1[i,]<-dm1[i,]+rep(c(0,3),each=5)
}
}
heatmap(dm1)
hh <- dist(dm1) %>% hclust
dmOrdered<-dm1[hh$order,]
par(mfrow=c(1,3))
image(t(dmOrdered)[,nrow(dmOrdered):1])
plot(rowMeans(dmOrdered),40:1,,xlab = 'Row Mean',ylab = 'Row',pch=19)
plot(colMeans(dmOrdered),xlab = 'Column',ylab = 'Column Mean',pch=19)
svd1 <- svd(scale(dmOrdered))
par(mfrow=c(1,3))
image(t(dmOrdered)[,nrow(dmOrdered):1],main='original data')
plot(svd1$u[,1],40:1,ylab = 'Row',xlab = 'First left singular vector',pch=19)
plot(svd1$v[,1],xlab = 'Column',ylab = 'First right singular vector',pch=19)
approx<-with(svd1,outer(u[,1],v[,1]))
par(mfrow=c(1,2))
image(t(dmOrdered)[,nrow(dmOrdered):1],main='original matrix')
image(t(approx)[,nrow(approx):1],main='Approximated Matrix')
